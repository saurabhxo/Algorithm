#include <iostream>
using namespace std;

int merge(int *arr, int temp[], int l, int m, int r)
{
    int i=l;
    int j=m;
    int k=l, inv=0;
    
    while((i<=m-1) && (j<=r))
    {
        if (arr[i] <= arr[j]) {
            temp[k++] = arr[i++];
        }
        else {
            temp[k++] = arr[j++];
            inv+=m-i;
        }
 
    }
     while (i <= m )
        temp[k++] = arr[i++];
        
    while (j <= r)
        temp[k++] = arr[j++];
        
    for (i = l; i <= r; i++)
        arr[i] = temp[i];
    
    return inv;    
}
int mergesort(int *arr, int temp[], int l, int r)
{
    int inv=0;
   
    if(r>l){
         int m=(l+r)/2;
    inv+=mergesort(arr, temp, l, m);
    inv+=mergesort(arr, temp, m+1, r);
    inv+=merge(arr, temp, l, m+1, r);
    }
    return inv;
}
int mergesort(int *arr, int n)
{
    int temp[n];
    return mergesort(arr, temp, 0, n-1);
}
int main() 
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    cin>>arr[i];
    cout<<mergesort(arr, n);
	return 0;
}
